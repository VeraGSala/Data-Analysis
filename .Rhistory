notedown Task_2_3md_parte1.Rmd --knit > output.ipynb
notedown Task_2_3md_parte1.Rmd --knit output.ipynb
--rmagic
notedown Task_2_3md_parte1.Rmd --knit > output.ipynb
knit_with_parameters('C:/Users/A/Desktop/Ubiqum Data Analytics/Data_Analysis/NewProductsProfitabilityPrediction_VGSala.Rmd')
library(readxl)
library(reshape2)
library(ggplot2)
library(arules)
library(caret)
library(rpart.plot)
dati <- read_excel("Survey_Key_and_Complete_Responses_excel.xlsx",sheet =2)
library(readxl)
library(reshape2)
library(ggplot2)
library(arules)
library(caret)
library(rpart.plot)
dati <- read_excel("Survey_Key_and_Complete_Responses_excel.xlsx",sheet =2)
str(dati)
print(paste("The number of NAs is ", (sum(is.na(dati)))))
print(paste("The number of duplicated rows is ",sum(duplicated(dati))))
perc1 <- round(table(dati$brand)[1]/sum(table(dati$brand))*100,0)
perc2 <- round(table(dati$brand)[2]/sum(table(dati$brand))*100,0)
ggplot(dati,aes(x=as.factor(brand),fill=as.factor(brand)))+geom_bar()+xlab("Brand")+
scale_fill_discrete(name="brand",labels = c("Acer", "Sony"))+
geom_text(aes(1, 3000, label=paste(perc1,"%")))+
geom_text(aes(2, 5000, label=paste(perc2,"%")))+
scale_x_discrete(labels=c("0" = "Acer","1" = "Sony"))+
ggtitle("Survey brand preferences")+ theme(plot.title = element_text(hjust = 0.5))
aaa <- melt(dati,id.vars = c("brand"))
ggplot(aaa,aes(x=value,fill=as.factor(brand)))+geom_histogram(col="gray")+facet_wrap(~ variable,scales = "free")+
scale_fill_discrete(name="brand",labels = c("Acer", "Sony"))+
ggtitle("Distribution of the interviewed users, divided by brand preference")+ theme(plot.title = element_text(hjust = 0.5))
datip <- dati
datip$zipcode <- as.factor(datip$zipcode)
datip$brand <- as.factor(datip$brand)
datip$car <- as.factor(datip$car)
set.seed(123)
indexT <- createDataPartition(datip$brand, p = .75, list = FALSE)
train <- datip[indexT,]
test <- datip[-indexT,]
print(paste("# instances in train set: ",dim(train)[1]))
print(paste("# instances in test set: ",dim(test)[1]))
iii <- createDataPartition(train$brand, p = .40, list = FALSE)
tt <- train[iii,]
print(paste("# instances in subset of train set: ",dim(tt)[1]))
set.seed(123)
fitControl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
fitrf <- train(brand ~ .  , data = tt, method = "rf",  tuneLength = 5, trControl=fitControl)
print(fitrf)
varImpPlot(fitrf$finalModel,type=2, main="Variables Importance")
ggplot(tt, aes(x=salary, y=age))+geom_point(aes(col=brand),size=2, shape=15)+
scale_color_manual(labels=c("0"="Acer","1"="Sony"), values = c( "#545454","#bdbdbd"))+ggtitle("Training data")+ theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
fitControl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
fitrf2 <- train(brand ~ salary + age  , data = tt, method = "rf",  tuneLength = 5, trControl=fitControl)
print(fitrf2)
grid <- expand.grid(x=seq(0,160000,1000), y=0:100)
names(grid) <- c("salary","age")
pred_frid <- predict(fitrf2,grid)
grid$pred <- pred_frid
ggplot(grid, aes(salary, age)) + geom_tile(aes(fill = pred)) +
xlab("Salary") + ylab("Age") +
geom_point(data=tt,aes(x=salary,y=age,col=brand),size=1)+
scale_color_manual(values = c("red", "blue"),name="Brand",labels=c("0"="Acer","1"="Sony"))+
scale_fill_discrete(name="Brand predictions",labels=c("0"="Acer","1"="Sony"))+ ggtitle("Random forest classification boundaries")+ theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
fitControl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
fitknn2 <- train(brand ~ salary + age  , data = tt, method = "knn",  tuneLength = 8, trControl=fitControl)
print(fitknn2)
grid <- expand.grid(x=seq(0,160000,1000), y=0:100)
names(grid) <- c("salary","age")
pred_frid <- predict(fitknn2,grid)
grid$pred <- pred_frid
ggplot(grid, aes(salary, age)) + geom_tile(aes(fill = pred)) +
xlab("Salary") + ylab("Age") +
geom_point(data=tt,aes(x=salary,y=age,col=brand),size=1)+
scale_color_manual(values = c("red", "blue"),name="Brand",labels=c("0"="Acer","1"="Sony"))+
scale_fill_discrete(name="Brand predictions",labels=c("0"="Acer","1"="Sony"))+ ggtitle("k-nn classification boundaries: no-scaled data")+ theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
fitControl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
fitknn3 <- train(brand ~ salary + age  , data = tt, method = "knn",preProcess=c("scale","center") , tuneLength = 8, trControl=fitControl)
print(fitknn3)
grid <- expand.grid(x=seq(0,160000,1000), y=0:100)
names(grid) <- c("salary","age")
pred_frid <- predict(fitknn3,grid)
grid$pred <- pred_frid
ggplot(grid, aes(salary, age)) + geom_tile(aes(fill = pred)) +
xlab("Salary") + ylab("Age") +
geom_point(data=tt,aes(x=salary,y=age,col=brand),size=1)+
scale_color_manual(values = c("red", "blue"),name="Brand",labels=c("0"="Acer","1"="Sony"))+
scale_fill_discrete(name="Brand predictions",labels=c("0"="Acer","1"="Sony"))+ ggtitle("k-nn classification boundaries: scaled data")+ theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
fitControl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
fitsvm2 <- train(brand ~ salary + age  , data = tt, method = "svmRadial" , tuneLength = 8, trControl=fitControl)
print(fitsvm2)
grid <- expand.grid(x=seq(0,160000,1000), y=0:100)
names(grid) <- c("salary","age")
pred_frid <- predict(fitsvm2,grid)
grid$pred <- pred_frid
ggplot(grid, aes(salary, age)) + geom_tile(aes(fill = pred)) +
xlab("Salary") + ylab("Age") +
geom_point(data=tt,aes(x=salary,y=age,col=brand),size=1)+
scale_color_manual(values = c("red", "blue"),name="Brand",labels=c("0"="Acer","1"="Sony"))+
scale_fill_discrete(name="Brand predictions",labels=c("0"="Acer","1"="Sony"))+ ggtitle("SVM classification boundaries")+ theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
fitControl <- trainControl(method = "repeatedcv", number = 3, repeats = 3)
fitC50 <- train(brand ~ salary + age  , data = tt, method = "C5.0" , tuneLength = 8, trControl=fitControl)
print(fitC50)
grid <- expand.grid(x=seq(0,160000,1000), y=0:100)
names(grid) <- c("salary","age")
pred_frid <- predict(fitC50,grid)
grid$pred <- pred_frid
ggplot(grid, aes(salary, age)) + geom_tile(aes(fill = pred)) +
xlab("Salary") + ylab("Age") +
geom_point(data=tt,aes(x=salary,y=age,col=brand),size=1)+
scale_color_manual(values = c("red", "blue"),name="Brand",labels=c("0"="Acer","1"="Sony"))+
scale_fill_discrete(name="Brand predictions",labels=c("0"="Acer","1"="Sony"))+ ggtitle("C5.0 classification boundaries")+ theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
fitControl <- trainControl(method = "none")
fit_tot <- train(brand ~ salary + age  , data = train, method = "svmRadial" , tuneLength = 1, tuneGrid=expand.grid(.sigma = 1.157604, .C = 32), trControl=fitControl)
print(fit_tot)
predictions <- predict(fit_tot, test)
postResample(predictions, test$brand)
grid <- expand.grid(x=seq(0,160000,1000), y=0:100)
names(grid) <- c("salary","age")
pred_frid <- predict(fit_tot,grid)
grid$pred <- pred_frid
ggplot(grid, aes(salary, age)) + geom_tile(aes(fill = pred)) +
xlab("Salary") + ylab("Age") +
geom_point(data=test,aes(x=salary,y=age,col=brand),size=1)+
scale_color_manual(values = c("red", "blue"),name="Brand",labels=c("0"="Acer","1"="Sony"))+
scale_fill_discrete(name="Brand predictions",labels=c("0"="Acer","1"="Sony"))+ ggtitle("Test set, SVM classification boundaries")+ theme(plot.title = element_text(hjust = 0.5))
dati_new <- read.csv("SurveyIncomplete.csv")
bbb <- melt(dati_new[(names(dati_new) != "brand")])
ggplot(bbb,aes(x=value))+geom_histogram(col="gray")+facet_wrap(~ variable,scales = "free")+
ggtitle("Distributions of the interviewed users for the incomplete surveys")+ theme(plot.title = element_text(hjust = 0.5))
grid <- expand.grid(x=seq(0,160000,1000), y=0:100)
names(grid) <- c("salary","age")
pred_frid <- predict(fit_tot,grid)
grid$pred <- pred_frid
ggplot(grid, aes(salary, age)) + geom_tile(aes(fill = pred)) +
xlab("Salary") + ylab("Age") +
scale_fill_discrete(name="Brand predictions",labels=c("0"="Acer","1"="Sony"))+
geom_point(data=dati_new,aes(x=salary,y=age),size=1, shape = 4)+ggtitle("Incomplete surveys")+
theme(plot.title = element_text(hjust = 0.5))
#geom_point(data=tt,aes(x=salary,y=age,col=brand),size=1)+
#scale_color_manual(values = c("red", "blue"),name="Brand",labels=c("0"="Acer","1"="Sony"))+
brand_pred <- predict(fit_tot, dati_new)
dati_new$brand <- brand_pred
head(dati_new,20)
